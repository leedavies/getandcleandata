unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flagsm unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flag$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data("iris")
?iris
iris
lappy(iris, mean())
lapply(iris, mean)
colMeans(iris)
colMeans(iris[,1])
?colMean
?colMeans
colMeans(iris, dims=1)
colMeans(iris[,1], dims=1)
rowMean(iris[, 1:4])
rowMeans(iris[, 1:4])
colMeans(iris[, 1])
colMeans(iris[2, ])
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
library(datasets)
data(mtcars)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
mtcars
tapply(mtcars$cyl, mtcars$hp, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
hp_val <- tapply(mtcars$hp, mtcars$cyl, mean)
hp_val[3] - hp_val[1]
hp_val[3]
hp_val[4]
hp_val[1]
round(hp_val[3] - hp_val[1])
iris
tapply(iris, iris[, iris$Species = 'virginica'], mean)
tapply(iris, iris[, iris$Species] = 'virginica', mean)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
iris_vals <- tapply(iris$Sepal.Length, iris$Species, mean)
iris_vals
round(iris_vals$Virginica)
round(iris_vals[3])
tapply(iris$Species, iris$Sepal.Length, mean)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, prob = c(0.3, 0.7), replace=TRUE)
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$dist, y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab= "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab= "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab= "Speed", ylab= "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
?points
plot(cars, pch = 2)
data(mtcars)
View(cars)
?boxplot
boxplot(formula = mpg ~ cyl, mtcars)
hist(mtcars$mpg)
set.seed(1)
rpoise(5, 2)
rpois(5, 2)
?set.seed
?seed
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
plot(x, y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
R.home()
install.packages("dplyr")
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country = "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "India")
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran, country, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb /2^10)
mutate(cran3, correct_size = size + 1000)
summarise(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?seperate
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?speard
?spread
submit()
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
Sys.setlocale("en_US.UTF-8")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, minutes = 7)
this_moment <- update(this_moment, hours = 0, minutes = 7, seconds = 0)
this_moment
?now
nyc <- now(tzone = "America/New_York")
syc
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minuets = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- nyc + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone= "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("D:/datasciencecoursera/get_and_clean_data/Course Project/getandcleandata")
source("run_analysis.R")
tidyData()
source("run_analysis.R")
tidyData()
source("run_analysis.R")
tidyData()
source("run_analysis.R")
tidyData()
source("run_analysis.R")
tidyData()
source("run_analysis.R")
tidyData()
source("run_analysis.R")
tidyData()
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
install.packages("plyr")
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
View(data)
?require
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
source("run_analysis.R")
writeAverageForVariableAndSubject("clean_file.txt")
source("run_analysis.R")
writeAverageForVariableAndSubject("clean_file.txt")
source("run_analysis.R")
writeAverageForVariableAndSubject("tidy_data_file.txt")
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
?make.names
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
View(data)
source("run_analysis.R")
data <- tidyData()
source("run_analysis.R")
data <- tidyData()
class(data)
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
writeAverageForVariableAndSubject()
source("run_analysis.R")
writeAverageForVariableAndSubject()
source("run_analysis.R")
writeAverageForVariableAndSubject()
source("run_analysis.R")
writeAverageForVariableAndSubject()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
source("run_analysis.R")
data <- tidyUCIHARDataSet()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
writeAverageForVariableAndSubject()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
writeAverageForVariableAndSubject()
source("run_analysis.R")
writeAverageForVariableAndSubject()
?rbind
source("run_analysis.R")
data <- tidyUCIHARDataSet()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
source("run_analysis.R")
data <- tidyUCIHARDataSet()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
source("run_analysis.R")
data <- tidyUCIHARDataSet()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
source("run_analysis.R")
data <- tidyUCIHARDataSet()
View(data)
writeAverageForVariableAndSubject()
source("run_analysis.R")
View(data)
data <- tidyUCIHARDataSet()
View(data)
